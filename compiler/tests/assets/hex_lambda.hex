# HEX Programming Language
# Copyright (C) 2013  Yanzheng Li
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# This is a test file used for the HEX compiler.
# Lambda definitions.


do_nothing_1 = () => {};
do_nothing_2 = (a,b,c,*args, **kwargs) => {};

hello_world = () -> print('Hello world');

fibonacci = (n) => {
	return n if n == 0 or n == 1;
	return fibonacci(n-1) + fibonacci(n - 2);
};

mathy = (*args) => {
	for i in 1...10 {
	  fibonacci(i);
	}
};

args_and_kwargs = (*args, **kwargs) => {
  for arg in args {
    print(arg);
  }

  for k,v in kwargs {
    print('%s = %s' % (k, v));
  }
};

retry = (func, num=5) => {
  for i in 1...num {
    try {
      return func();
    } catch {
      print('%dth try' % i);
    }
  }
};

@retry(num=10)
sqr = (x) -> x**2;

nested = () => {
  hello = () => {
    world = () => {
      print(' world');
    };
    print('Hello ');
    world();
  };
};
